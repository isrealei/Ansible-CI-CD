- name: VPC set-up
  hosts: localhost
  connection:  local
  gather_facts: false
  tasks:
  - name: Import VPC variables
    include_vars: vars/vpc_setups

  - name: create vpc 
    ec2_vpc_net:
       name: "{{vpc_name}}"
       cidr_block: "{{vpc_cidr}}"
       region: "{{region}}"
       tags:
         module: ec2_vpc_net
         this: works
       dns_hostnames: yes
       dns_support: yes
       tenancy: default
       state: "{{state}}"
    register: vpout

      # - debug:
      #var: vpout


  - name: public subnet-1 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pub_subnet_1}}"
      az: "{{zone1}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: yes
      tags:
        Name: public-Subnet-1
    register: pubsub1_out


  - name: public subnets-2 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pub_subnet_2}}"
      az: "{{zone2}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: yes
      tags:
        Name: public-Subnet-2
    register: pubsub2_out

  - name: public subnets-3 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pub_subnet_3}}"
      az: "{{zone3}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: yes
      tags:
        Name: public-Subnet-3
    register: pubsub3_out


  - name: private subnets-1 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pri_subnet_1}}"
      az: "{{zone1}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: no
      tags:
        Name: private-Subnet-1
    register: prisub1_out


  - name: private subnets-2 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pri_subnet_2}}"
      az: "{{zone2}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: no
      tags:
        Name: private-Subnet-2
    register: prisub2_out


  - name: private subnets-3 creation
    ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpout.vpc.id}}"
      cidr: "{{pri_subnet_3}}"
      az: "{{zone3}}"
      region: "{{region}}"
      state: "{{state}}"
      map_public: no
      tags:
        Name: private-Subnet-3
    register: prisub3_out


# Internent Gateway

  - name: Internet gateway set-up
    ec2_vpc_igw:
      vpc_id: "{{vpout.vpc.id}}"
      state: present
      region: "{{region}}"
      tags:
        Name: internet-gateway
    register: igwout

# Route tables creation


  - name: Set up public subnet route table
    ec2_vpc_route_table:
      vpc_id: "{{vpout.vpc.id}}"
      region: "{{region}}"
      state: "{{state}}"
      tags:
        Name: Public-RT
      subnets:
      - "{{pubsub1_out.subnet.id}}"
      - "{{pubsub2_out.subnet.id}}"
      - "{{pubsub3_out.subnet.id}}"
      routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{igwout.gateway_id}}"
    register: pubrt


  - name: create a new nat-gate way and allocate elas ip
    ec2_vpc_nat_gateway:
      state: "{{state}}" 
      subnet_id: "{{pubsub1_out.subnet.id}}"
        #eip_address: 52.1.1.1
      region: "{{region}}"
      wait: yes
        #nat_gateway_id: 	nat-0a1ec99cbb3f0822a
      if_exist_do_not_create: yes
      
    register: natout

  - name:  Route gatewap for private sub-net
    ec2_vpc_route_table:
      vpc_id: "{{vpout.vpc.id}}"
      region: "{{region}}"
      state: "{{state}}"
      tags:
        Name: Private-RT
      subnets:
      - "{{prisub1_out.subnet.id}}"
      - "{{prisub2_out.subnet.id}}"
      - "{{prisub3_out.subnet.id}}"
      routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{natout.nat_gateway_id}}"
    register: prirt

#   - name:  Print all ids
#     debug: 
#      var: "{{item}}"
#     loop:
#     - vpout.vpc.id
#     - pubsub1_out.subnet.id
#     - pubsub2_out.subnet.id
#     - pubsub3_out.subnet.id
#     - prisub1_out.subnet.id
#     - prisub2_out.subnet.id
#     - prisub3_out.subnet.id
#     - igwout.gateway_id
#     - natout.nat_gateway_id
#     - pubrt.route_table.id
#     - prirt.route_table.id

  - set_fact: 
      vpcid: "{{vpout.vpc.id}}"
      pub1id: "{{pubsub1_out.subnet.id}}"
      pub2id: "{{pubsub2_out.subnet.id}}"
      pub3id: "{{pubsub3_out.subnet.id}}"
      pri1id: "{{prisub1_out.subnet.id}}"
      pri2id: "{{prisub2_out.subnet.id}}"
      pri3id: "{{prisub3_out.subnet.id}}"
      igwid: "{{igwout.gateway_id}}"
      ngwid: "{{natout.nat_gateway_id}}"
      pubrtid: "{{pubrt.route_table.id}}"
      prirtid: "{{prirt.route_table.id}}"
      cacheable: yes

  - name: create variable file for vpc output
    copy:
       content: "region: {{region}}\nvpcid: {{vpout.vpc.id}}\npub1id: {{pubsub1_out.subnet.id}}\npub2id: {{pubsub2_out.subnet.id}}\npub3id: {{pubsub3_out.subnet.id}}\npri1id: {{prisub1_out.subnet.id}}\npri2id: {{prisub2_out.subnet.id}}\npri3id: {{prisub3_out.subnet.id}}\nigwid: {{igwout.gateway_id}}\nngwid: {{natout.nat_gateway_id}}\npubrtid: {{pubrt.route_table.id}}\nprirtid: {{prirt.route_table.id}}"
       dest: vars/output_vars


      














